<?php
// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –∏ Airtable
require_once 'database.php';
require_once 'config.php';

header('Content-Type: text/html; charset=utf-8');

function testSync() {
    $db = new Database();
    $config = include 'config.php';
    
    // Airtable settings
    $baseId = 'apppwhjFN82N9zNqm';
    $pat = getenv('AIRTABLE_PAT') ?: 'PLACEHOLDER_FOR_REAL_API_KEY';
    
    if ($pat === 'PLACEHOLDER_FOR_REAL_API_KEY') {
        return "‚ùå Airtable token not configured";
    }
    
    $results = [];
    
    // 1. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Airtable
    try {
        $ch = curl_init("https://api.airtable.com/v0/{$baseId}/tblbSajWkzI8X7M4U?maxRecords=1");
        curl_setopt_array($ch, [
            CURLOPT_HTTPHEADER => [
                'Authorization: Bearer ' . $pat,
                'Content-Type: application/json'
            ],
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_TIMEOUT => 10
        ]);
        
        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        $error = curl_error($ch);
        curl_close($ch);
        
        if ($error) {
            $results[] = "‚ùå Airtable connection failed: " . $error;
        } elseif ($httpCode !== 200) {
            $results[] = "‚ùå Airtable HTTP error: " . $httpCode;
        } else {
            $results[] = "‚úÖ Airtable connection successful";
        }
    } catch (Exception $e) {
        $results[] = "‚ùå Airtable connection error: " . $e->getMessage();
    }
    
    // 2. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
    try {
        $regions = $db->getRegions();
        $results[] = "‚úÖ Local DB connection successful (" . count($regions) . " regions)";
    } catch (Exception $e) {
        $results[] = "‚ùå Local DB connection error: " . $e->getMessage();
    }
    
    // 3. –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è
    $functions = [
        'updateRegion' => method_exists($db, 'updateRegion'),
        'deleteRegion' => method_exists($db, 'deleteRegion'),
        'updateCity' => method_exists($db, 'updateCity'),
        'deleteCity' => method_exists($db, 'deleteCity'),
        'updatePoi' => method_exists($db, 'updatePoi'),
        'deletePoi' => method_exists($db, 'deletePoi')
    ];
    
    foreach ($functions as $func => $exists) {
        if ($exists) {
            $results[] = "‚úÖ Function {$func} exists";
        } else {
            $results[] = "‚ùå Function {$func} missing";
        }
    }
    
    // 4. –¢–µ—Å—Ç API endpoints
    $endpoints = [
        'update-region' => 'POST /api/data-api.php?action=update-region',
        'delete-region' => 'POST /api/data-api.php?action=delete-region',
        'update-city' => 'POST /api/data-api.php?action=update-city',
        'delete-city' => 'POST /api/data-api.php?action=delete-city',
        'update-poi' => 'POST /api/data-api.php?action=update-poi',
        'delete-poi' => 'POST /api/data-api.php?action=delete-poi',
        'sync-airtable' => 'GET /api/sync-airtable.php',
        'bidirectional-sync' => 'GET /api/bidirectional-sync.php',
        'sync-diagnostics' => 'GET /api/sync-diagnostics.php'
    ];
    
    foreach ($endpoints as $action => $endpoint) {
        $url = "http://" . $_SERVER['HTTP_HOST'] . "/api/data-api.php?action=" . $action;
        $ch = curl_init($url);
        curl_setopt_array($ch, [
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_TIMEOUT => 5,
            CURLOPT_NOBODY => true
        ]);
        
        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);
        
        if ($httpCode === 200 || $httpCode === 405) { // 405 = Method Not Allowed (endpoint exists)
            $results[] = "‚úÖ Endpoint {$action} accessible";
        } else {
            $results[] = "‚ùå Endpoint {$action} not accessible (HTTP {$httpCode})";
        }
    }
    
    return $results;
}

$testResults = testSync();
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .result { margin: 10px 0; padding: 10px; border-radius: 5px; }
        .success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .info { background-color: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }
        h1 { color: #333; }
        .section { margin: 20px 0; }
        .section h2 { color: #666; border-bottom: 2px solid #eee; padding-bottom: 5px; }
    </style>
</head>
<body>
    <h1>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –∏ Airtable</h1>
    
    <div class="section">
        <h2>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
        <?php foreach ($testResults as $result): ?>
            <div class="result <?php echo strpos($result, '‚úÖ') === 0 ? 'success' : 'error'; ?>">
                <?php echo $result; ?>
            </div>
        <?php endforeach; ?>
    </div>
    
    <div class="section">
        <h2>üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</h2>
        <div class="result info">
            <strong>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</strong> <a href="/api/sync-diagnostics.php" target="_blank">/api/sync-diagnostics.php</a>
        </div>
        <div class="result info">
            <strong>–î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:</strong> <a href="/api/bidirectional-sync.php" target="_blank">/api/bidirectional-sync.php</a>
        </div>
        <div class="result info">
            <strong>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑ Airtable:</strong> <a href="/api/sync-airtable.php" target="_blank">/api/sync-airtable.php</a>
        </div>
    </div>
    
    <div class="section">
        <h2>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏</h2>
        <div class="result info">
            <strong>1. –û–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (Airtable ‚Üí –õ–æ–∫–∞–ª—å–Ω–∞—è –ë–î):</strong><br>
            ‚Ä¢ –î–∞–Ω–Ω—ã–µ –∏–∑ Airtable –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î<br>
            ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã<br>
            ‚Ä¢ –ù–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–µ –≤ Airtable
        </div>
        <div class="result info">
            <strong>2. –î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:</strong><br>
            ‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–±–µ —Å—Ç–æ—Ä–æ–Ω—ã<br>
            ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è –≤ Airtable<br>
            ‚Ä¢ Airtable –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª—è—é—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î<br>
            ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        </div>
        <div class="result info">
            <strong>3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ:</strong><br>
            ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î<br>
            ‚Ä¢ –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Airtable –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—é—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é<br>
            ‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞—Å–∫–∞–¥–Ω–æ (—Ä–µ–≥–∏–æ–Ω ‚Üí –≥–æ—Ä–æ–¥–∞ ‚Üí POI ‚Üí –±–∏–ª–µ—Ç—ã)
        </div>
    </div>
    
    <div class="section">
        <h2>‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è</h2>
        <div class="result error">
            <strong>–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</strong> –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ "–ª–æ–∫–∞–ª—å–Ω–∞—è –ë–î + —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"<br>
            ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –ù–ï —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å Airtable<br>
            ‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –≤—Ä—É—á–Ω—É—é<br>
            ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        </div>
    </div>
</body>
</html>
