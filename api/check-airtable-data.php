<?php
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Airtable
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å –≤ Airtable

require_once 'database.php';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ Airtable
function getAirtableToken() {
    $token = getenv('AIRTABLE_PAT') ?: getenv('AIRTABLE_API_KEY');
    if ($token) {
        return $token;
    }
    
    try {
        require_once 'secret-airtable.php';
        $tokens = load_airtable_tokens();
        if ($tokens['current']) {
            return $tokens['current'];
        }
    } catch (Exception $e) {
        echo "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–∫—Ä–µ—Ç–æ–≤: " . $e->getMessage() . "\n";
    }
    
    throw new Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω Airtable");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Airtable API
function airtableRequest($endpoint, $token) {
    $url = "https://api.airtable.com/v0/apppwhjFN82N9zNqm/$endpoint";
    $ch = curl_init();
    curl_setopt_array($ch, [
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_HTTPHEADER => [
            'Authorization: Bearer ' . $token,
            'Content-Type: application/json'
        ],
        CURLOPT_TIMEOUT => 30
    ]);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    if ($httpCode !== 200) {
        throw new Exception("Airtable API error: HTTP $httpCode - $response");
    }
    
    return json_decode($response, true);
}

try {
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Airtable...\n";
    
    $token = getAirtableToken();
    echo "‚úÖ –¢–æ–∫–µ–Ω Airtable –ø–æ–ª—É—á–µ–Ω\n";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É POI
    echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É POI...\n";
    $poisData = airtableRequest('tblVCmFcHRpXUT24y', $token);
    
    if (isset($poisData['records'])) {
        echo "–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: " . count($poisData['records']) . "\n";
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π
        for ($i = 0; $i < min(5, count($poisData['records'])); $i++) {
            $record = $poisData['records'][$i];
            $fields = $record['fields'];
            
            echo "\n--- –ó–∞–ø–∏—Å—å " . ($i + 1) . " ---\n";
            echo "ID: " . $record['id'] . "\n";
            echo "–ù–∞–∑–≤–∞–Ω–∏–µ (RU): " . ($fields['–ù–∞–∑–≤–∞–Ω–∏–µ (RU)'] ?? '–ù–µ—Ç') . "\n";
            echo "–ù–∞–∑–≤–∞–Ω–∏–µ (EN): " . ($fields['–ù–∞–∑–≤–∞–Ω–∏–µ (EN)'] ?? '–ù–µ—Ç') . "\n";
            echo "POI ID: " . ($fields['POI ID'] ?? '–ù–µ—Ç') . "\n";
            echo "City Location: " . (isset($fields['City Location']) ? implode(', ', $fields['City Location']) : '–ù–µ—Ç') . "\n";
            echo "Regions: " . (isset($fields['Regions']) ? implode(', ', $fields['Regions']) : '–ù–µ—Ç') . "\n";
            echo "POI Category (RU): " . (isset($fields['POI Category (RU)']) ? implode(', ', $fields['POI Category (RU)']) : '–ù–µ—Ç') . "\n";
        }
    } else {
        echo "‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ POI\n";
    }
    
} catch (Exception $e) {
    echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
    exit(1);
}
?>
