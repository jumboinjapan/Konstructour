name: Deploy to Bluehost

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH key
      shell: bash
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        echo "SSH key ready"
        
    - name: Deploy to server
      shell: bash
      run: |
        echo "🚀 Starting deployment..."
        
        # Clean up old backups and ensure directory exists
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          # Remove old backup directories
          rm -rf '${{ secrets.SERVER_PATH }}_backup_'*
          echo 'Old backups cleaned up'
          
          # Ensure main directory exists
          if [ ! -d '${{ secrets.SERVER_PATH }}' ]; then
            mkdir -p '${{ secrets.SERVER_PATH }}'
            echo 'Directory created'
          fi
        "
        
        # Sync files
        rsync -avz --delete --rsync-path='rsync' \
          --exclude='api/config.php' \
          --exclude='api/backups/' \
          -e "ssh -i ~/.ssh/id_rsa" \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.github' \
          --exclude='*.log' \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}/
        
        # Set permissions
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          find '${{ secrets.SERVER_PATH }}' -type f -exec chmod 644 {} \;
          find '${{ secrets.SERVER_PATH }}' -type d -exec chmod 755 {} \;
          echo '✅ File permissions set'
        "
        
        # Bootstrap Airtable secrets (FORCE CREATE)
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          echo '🔧 FORCE creating Airtable secrets directory...'
          
          # FORCE create directory with sudo
          sudo mkdir -p /var/konstructour/secrets
          sudo chown www-data:www-data /var/konstructour/secrets
          sudo chmod 700 /var/konstructour/secrets
          echo '✅ Directory created with proper permissions'
          
          # Create secret file with REAL Airtable PAT
          sudo bash -c 'cat > /var/konstructour/secrets/airtable.json <<EOF
{
  \"current\": {
    \"token\": \"${{ secrets.AIRTABLE_PAT }}\",
    \"since\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
  },
  \"next\": {
    \"token\": null,
    \"since\": null
  }
}
EOF'
          sudo chown www-data:www-data /var/konstructour/secrets/airtable.json
          sudo chmod 600 /var/konstructour/secrets/airtable.json
          echo '✅ Secret file created with Airtable PAT'
          
          # Verify
          if [ -f '/var/konstructour/secrets/airtable.json' ]; then
            echo '✅ Verification: Secret file exists'
            if sudo -u www-data test -r /var/konstructour/secrets/airtable.json; then
              echo '✅ Verification: Secret file is readable by PHP'
            else
              echo '❌ Verification: Secret file is NOT readable by PHP'
            fi
          else
            echo '❌ Verification: Secret file does NOT exist'
          fi
        "
        
        # Final verification
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          echo '🔍 Verifying deployment...'
          if [ -f '/var/konstructour/secrets/airtable.json' ]; then
            echo '✅ Secret file exists'
            if sudo -u www-data test -r /var/konstructour/secrets/airtable.json; then
              echo '✅ Secret file is readable by PHP'
            else
              echo '❌ Secret file is not readable by PHP'
            fi
          else
            echo '❌ Secret file does not exist'
          fi
          echo '✅ Deployment completed!'
        "