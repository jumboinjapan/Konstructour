name: Deploy to Bluehost

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keygen -l -f ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to server
      run: |
        echo "ðŸš€ Starting deployment..."
        
        # Create backup or directory
        ssh -i ~/.ssh/id_ed25519 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          if [ -d '${{ secrets.SERVER_PATH }}' ]; then
            cp -r '${{ secrets.SERVER_PATH }}' '${{ secrets.SERVER_PATH }}_backup_$(date +%Y%m%d_%H%M%S)'
            echo 'Backup created'
          else
            mkdir -p '${{ secrets.SERVER_PATH }}'
            echo 'Directory created'
          fi
        "
        
        # Sync files
        rsync -avz --delete -e "ssh -i ~/.ssh/id_ed25519" \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.github' \
          --exclude='*.log' \
          --exclude='deploy*.sh' \
          --exclude='push.sh' \
          --exclude='check-bluehost.sh' \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}/
        
        # Set permissions
        ssh -i ~/.ssh/id_ed25519 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          find '${{ secrets.SERVER_PATH }}' -type f -exec chmod 644 {} \;
          find '${{ secrets.SERVER_PATH }}' -type d -exec chmod 755 {} \;
          echo 'âœ… Deployment completed!'
        "